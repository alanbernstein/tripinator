* process

1. ~mkdir my-trip && mkdir my-trip/{img,img-thumb,video,video-poster,tracks}~
2. get photos in order
   - copy photos into ~my-trip/img~
   - ensure all photo timestamps and/or timestamp filenames are correct. 
     - try ~scripts/exiftouch.sh~, but be sure to check that the exif tag its using exists, and contains good data.
     - if using photos from multiple devices, check exif key/value for each device, each app, and each media type (e.g. still photo, motion photo, panorama, HDR, ... and videos and gifs)
     - lots of notes on how fucked up this is in ~scripts/generate-metadata.py~.
   - ensure all photo geotags are present (TODO don't require this)
   - use ~convert~ to generate thumbnails
     - ~for f in *.jpg ; do convert $f -resize 5% ../thumb/$f ; done~
3. get videos in order
   - copy videos into ~my-trip/video~
   - ensure all video timestamps and/or timestamp filenames are correct
   - ensure all video geotags are present (TODO don't require this)
   - use ~ffmpeg~ to generate "posters" which double as thumbnails
     - by frame: ~ffmpeg -i VID_20200902_193614.mp4 -vframes 1 VID_20200902_193614.jpeg~
     - by timestamp: ~ffmpeg -i VID_20200902_193614.mp4 -ss 00:09 VID_20200902_193614.jpeg~
4. run ~scripts/generate-metadata.py~
   - update/add new device-specific sections to the ~get_details~ function (TODO: switch behavior based on hardware name in exif tag - possibly unreliable)
5. add comments to the metadata file (TODO pull from exif and/or load from a separate ~comments.csv~ file or something)
6. run ~scripts/generate-html.py~
7. copy results into the appropriate place in ~my-trip/index.html~ (TODO add the complete html to the template... split out the js and css)

also:
- add any new icons
- add waypoints file
  - TODO: load waypoint file from server
  - TODO: associate waypoints with icons in waypoint file?
- copy track GeoJSON files to ~js/~
  - TODO: copy track GeoJSON files to ~my-trip/tracks~, load those from server

* data munging commands

convert gpx to geojson

~ogr2ogr -f GeoJSON pecos1.json Pecos_Wilderness_Backpacking_Day_1.gpx  tracks~

convert svg icon to png with transparent background

~convert -background none noun_summit_2674795.svg summit.png~



* frontend tools

research notes

** photo gallery/slideshow

*** lightgallery
pretty straightforward except for a couple minor TODOs

*** reveal.jsx
UI is great, but just seems like it wasn't made for this

https://stackoverflow.com/questions/20119488/how-to-embed-a-leaflet-map-into-a-reveal-js-presentation
https://github.com/ralexrdz/reveals-leaflet/


** mapping

*** leaflet
pretty straightforward

https://blog.mastermaps.com/2012/08/showing-gps-tracks-with-leaflet.html

**** more icons
https://github.com/lvoogdt/Leaflet.awesome-markers

*** google maps
https://developers.google.com/maps/documentation/embed/get-started

*** openlayers
https://openlayers.org/

didn't try because leaflet worked fine

** plotting elevation??

https://github.com/MrMufflon/Leaflet.Elevation
